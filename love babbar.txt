1)change the array with 1


#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[5]={1,2,3,4,5};
    for(int i=0; i<5; i++){
        arr[i]=1;
    }
    for(int i=0; i<5; i++){
        cout<<arr[i]<<" ";
    }
}
2) array initialisation

#include<bits/stdc++.h>
using namespace std;
int main(){
    //garbage value lega
    int arr[5];
    for(int i=0; i<5; i++){
        cout<<arr[i];
    }
    cout<<endl;
    //0 value lega
    int arr1[5]={};
    for(int i=0; i<5; i++){
        cout<<arr1[i];
    }
    cout<<endl;
    //0 value lega
    int arr2[5]={0};
    for(int i=0; i<5; i++){
        cout<<arr2[i];
    }
}

3) array and function 
in array we use pass by refrence not pass by value because of pointer concept because we array use addres of index .
we perform operation in array by actual value not in copy value
so every time print function print updated value

#include<bits/stdc++.h>
using namespace std;

void printarray(int arr[],int size){
    for(int i=0; i<size; i++){
        cout<<arr[i];
    }
    cout<<endl;
}

void fun(int arr[],int size){
    arr[0]=10;
    arr[1]=20;
    printarray(arr,size);
}
int main(){
    int arr[]={2,3};
    int size=2;
    fun(arr,size);
    printarray(arr,size);
}

7) find linear search'

#include<bits/stdc++.h>
using namespace std;
bool find(int arr[], int size, int key){
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            return true;
        }
    }
    return false;
}
int main(){
    int arr[5]={1,2,3,4,5};
    int size=5;
    int key;
    cin>>key;
    if(find(arr,size, key)){
        cout<<"found";
    }
    else{
        cout<<"not found";
    }
}


without function krengent to
but isme jb b valuen check krega to not found chla dega 
to ye method to kam ni ke rha

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            cout<<"found";
        }
        else{
            cout<<"not found";
        }
    }
    
    return  0;
}

without function another method
 isme b hrdm not found chlega chahe milo ya na  milo


#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            cout<<"found";
        }
    }
    cout<<"not found";
    
    return  0;
}

flag vala method
#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    bool flag=0; //not found k liye 0 || found k liye 1
    
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            flag=1;
            break; //age chaeck ni krega
        }
    }
    if(flag==1){
        cout<<"found";
    }
    else{
        cout<<"not found";
    }
    
    return  0;
}

8) count 0 and 1 by using linear search

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={0,1,0,1,0,1};
    int size=6;
    int zero=0;
    int one=0;
    for(int i=0; i<size; i++){
        if(arr[i]==0){
            zero++;
        }
        if(arr[i]==1){
            one++;
        }
    }
    cout<<zero<<endl;
    cout<<one;
    
    return  0;
}

9)
find the maximum by using linear search

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={2,3,4,6,7,9};
    int size=6;
    int maxi=INT_MIN;
    for(int i=0; i<size; i++){
        if(arr[i]>maxi){
            maxi=arr[i];
        }
    }
    cout<<"maximum is : "<<maxi;
    
    
    return  0;
}


10) reverse the array

