1)change the array with 1


#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[5]={1,2,3,4,5};
    for(int i=0; i<5; i++){
        arr[i]=1;
    }
    for(int i=0; i<5; i++){
        cout<<arr[i]<<" ";
    }
}
2) array initialisation

#include<bits/stdc++.h>
using namespace std;
int main(){
    //garbage value lega
    int arr[5];
    for(int i=0; i<5; i++){
        cout<<arr[i];
    }
    cout<<endl;
    //0 value lega
    int arr1[5]={};
    for(int i=0; i<5; i++){
        cout<<arr1[i];
    }
    cout<<endl;
    //0 value lega
    int arr2[5]={0};
    for(int i=0; i<5; i++){
        cout<<arr2[i];
    }
}

3) array and function 
in array we use pass by refrence not pass by value because of pointer concept because we array use addres of index .
we perform operation in array by actual value not in copy value
so every time print function print updated value

#include<bits/stdc++.h>
using namespace std;

void printarray(int arr[],int size){
    for(int i=0; i<size; i++){
        cout<<arr[i];
    }
    cout<<endl;
}

void fun(int arr[],int size){
    arr[0]=10;
    arr[1]=20;
    printarray(arr,size);
}
int main(){
    int arr[]={2,3};
    int size=2;
    fun(arr,size);
    printarray(arr,size);
}

7) find linear search

#include<bits/stdc++.h>
using namespace std;
bool find(int arr[], int size, int key){
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            return true;
        }
    }
    return false;
}
int main(){
    int arr[5]={1,2,3,4,5};
    int size=5;
    int key;
    cin>>key;
    if(find(arr,size, key)){
        cout<<"found";
    }
    else{
        cout<<"not found";
    }
}


without function krengen to
but isme jb b valuen check krega to not found chla dega 
to ye method to kam ni ke rha

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            cout<<"found";
        }
        else{
            cout<<"not found";
        }
    }
    
    return  0;
}

without function another method
 isme b hrdm not found chlega chahe milo ya na  milo


#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            cout<<"found";
        }
    }
    cout<<"not found";
    
    return  0;
}

flag vala method
#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={1,2,3,4,5,6};
    int size=6;
    int key;
    bool flag=0; //not found k liye 0 || found k liye 1
    
    cin>>key;
    for(int i=0; i<size; i++){
        if(arr[i]==key){
            flag=1;
            break; //age chaeck ni krega
        }
    }
    if(flag==1){
        cout<<"found";
    }
    else{
        cout<<"not found";
    }
    
    return  0;
}

8) count 0 and 1 by using linear search

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={0,1,0,1,0,1};
    int size=6;
    int zero=0;
    int one=0;
    for(int i=0; i<size; i++){
        if(arr[i]==0){
            zero++;
        }
        if(arr[i]==1){
            one++;
        }
    }
    cout<<zero<<endl;
    cout<<one;
    
    return  0;
}

9)
find the maximum by using linear search

#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={2,3,4,6,7,9};
    int size=6;
    int maxi=INT_MIN;
    for(int i=0; i<size; i++){
        if(arr[i]>maxi){
            maxi=arr[i];
        }
    }
    cout<<"maximum is : "<<maxi;
    
    
    return  0;
}


10) reverse the array

#include <bits/stdc++.h>
using namespace std;


int main()
{
    int arr1[5]={2,4,6,7,8};
    int size=5;
    int start=0;
    int end=size-1;
    while(start<=end){
        swap(arr1[start],arr1[end]);
        start++;
        end--;
    }
    for(int i=0; i<size; i++){
        cout<<arr1[i]<<" ";
    }
}

jab tak start end se kam ya equal rhega tab tak yr chlega .. jese hi start end se jada hoga loop ni chlega
----------------------------------------------------------------------------------------------------------------


NEW TOPIC:-                             VECTOR


vector initialisation 
1)vector<int>arr;
2)int n;
cin>>n;
vector<int>arr(n);

3) for insert value in vector
arr.push_back(5);
4) for remove value in vector
arr.pop_back();

5) for find size
arr.size();
6) vector empty h ya nhi h
arr.empty();

7) vector inititalisation

#include <bits/stdc++.h>
using namespace std;


int main()
{
    vector<int>arr;
    cout<<arr.size()<<endl;
    cout<<arr.capacity()<<endl;
    //value insert 
    arr.push_back(5);
    arr.push_back(6);
    for(int i=0; i<arr.size(); i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    arr.pop_back();
    for(int i=0; i<arr.size(); i++){
        cout<<arr[i]<<" ";
    }
    
    //pehle se koi value dal k rkhna
    cout<<"enter the value of size of array";
    int n;
    cin>>n;
    vector<int>arr1(n, -101);
    for(int i=0; i<arr1.size(); i++){
        cout<<arr1[i]<<" ";
    }
    cout<<endl;
    
    //another method to initialise
    vector<int>crr{1,2,3,4};
    for(int i=0; i<crr.size(); i++){
        cout<<crr[i]<<" ";
    }
    
}

---------------------------------------------------------------------------------------------------
1) FIND UNIQUE ELEMENT

#include <bits/stdc++.h>
using namespace std;
int findunique(vector<int>arr){
    int ans=0;
    for(int i=0; i<arr.size(); i++){
        ans=ans ^ arr[i];
    }
    return ans;
    
}
int main()
{
    int n;
    cout<<"enter the size of array";
    cin>>n;
    vector<int>arr(n);
    for(int i=0; i<arr.size(); i++){
        cin>>arr[i];
    }
    int uniqueElement=findunique(arr);
    cout<<"uniqueElement is "<<uniqueElement;
    

    return 0;
}

2) UNION TWO ARRAYS\
#include <bits/stdc++.h>

using namespace std;
int main(){
    int arr[]={1,2,3,4,5};
int sizea=5;
int brr[]={6,7,8,9};
int sizeb=4;
vector<int>ans;
for(int i=0; i<sizea; i++){
    ans.push_back(arr[i]);
}

for(int i=0; i<sizeb; i++){
    ans.push_back(brr[i]);
}

for(int i=0; i<ans.size(); i++){
    cout<<ans[i]<<" ";
}

}


3) FIND INTERSECTION OF TWO ARRAYS

    #include <bits/stdc++.h>
    
    using namespace std;
    int main(){
        
        vector<int>arr{1,2,3,4,5};
        vector<int>brr{3,4,6,7};
        vector<int>ans;
        for(int i=0; i<arr.size(); i++){
            int element=arr[i];
            for(int j=0; j<brr.size(); j++){
                if(element==brr[j]){
                    ans.push_back(element);
                }
            }
        }
        
        // dono hi valid hain
        for(int k=0; k<ans.size(); k++){
            cout<<ans[k]<<" ";
        }
        
        // for(auto value: ans){  
        //     cout<<value<<" ";
        // }
    }
    
if we remove duplicate 

    #include <bits/stdc++.h>
    
    using namespace std;
    int main(){
        
        vector<int>arr{1,2,3,3,4,5};
        vector<int>brr{3,3,4,6,7};
        vector<int>ans; 
        for(int i=0; i<arr.size(); i++){
            int element=arr[i];
            for(int j=0; j<brr.size(); j++){
                if(element==brr[j]){
                    brr[j]=-2;
                    ans.push_back(element);
                }
            } 
        }
        
        // dono hi valid hain
        for(int k=0; k<ans.size(); k++){
            cout<<ans[k]<<" ";
        }
        
        // for(auto value: ans){  
        //     cout<<value<<" ";
        // }
    }

4) PAIR SUM

    #include <bits/stdc++.h>
    
    using namespace std;
    int main(){
        vector<int>arr{10,20,30,40};
        int sum=50;
        for(int i=0; i<arr.size(); i++){
            int element=arr[i];
            for(int j=i+1; j<arr.size(); j++){
            if(element+arr[j]==sum){
                cout<<"pair found "<<element<<" ,"<<arr[j];
            }
        }
        }
        
    }
5) 
0 and 1 ko ek sath rakhna
#include<bits/stdc++.h>
using namespace std;
int main(){
    vector<int>arr{0,1,0,1,0,1,0,1};
    int start=0;
    int end=arr.size()-1;
    int i=0;
    while(start<=end){
        if(arr[i]==0){
            swap(arr[start],arr[i]);
            i++;
            start++;
        }
        else{
            swap(arr[end],arr[i]);
            end--;
        }
    }
    for(auto val: arr){
        cout<<val<<" ";
    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                        2D ARRAY
declare 2d array
int arr[3][3];
int arr[3][3]={{1,2,3}, {4,5,6}, {7,8,9}};


#include <bits/stdc++.h>
using namespace std;

int main()
{
    int arr[2][2]={{1,2},{3,4}};
    for(int i=0; i<2; i++){
        for(int j=0; j<2; j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    // for printing column wise
    
    for(int i=0; i<2; i++){
        for(int j=0; j<2; j++){
            cout<<arr[j][i]<<" ";
        }
        cout<<endl;
    }
    
    
    return 0;
}

1) FIND SUM OF ROW WISE

    
    #include <bits/stdc++.h>
    using namespace std;
    void printrowsum(int arr[][2],int rows,int cols){
        
        for(int i=0; i<rows; i++){
            int sum=0;
            for(int j=0; j<cols; j++){
                sum=sum+arr[i][j];
            }
            cout<<sum<<endl;
        }
        
    }
    
    int main()
    {
        int arr[2][2]={{1,2},{3,4}};
        int rows=2;
        int cols=2;
        printrowsum(arr,rows,cols);
        
        return 0;
    }

2) FIND THE KEY IN 2D ARRAY

    
    #include <bits/stdc++.h>
    using namespace std;
    bool findkey(int arr[][2],int rows,int cols, int key){
        
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                if(arr[i][j]==key){
                    return true;
                }
            }
        }
        return false;
        
    }
    
    int main()
    {
        int arr[2][2]={{1,2},{3,4}};
        int rows=2;
        int cols=2;
        int key=1;
        cout<<findkey(arr,rows,cols,key)<<endl;
        if(findkey(arr,rows,cols,key)){
            cout<<"true"<<endl;
        }
        else{
            cout<<"false"<<endl;
        } 
        
        return 0;
    }


--------------------------------------------------------------------------------------------------------------------------

VECTOR OF VECTOR OF 2D ARRAY


#include <bits/stdc++.h>
using namespace std;=\

int main()
{
    vector<vector<int>>arr;
    vector<int>a{1,2,3};
    vector<int>b{4,5,6};
    vector<int>c{1,2,3};
    arr.push_back(a);
    arr.push_back(b);
    arr.push_back(c);
    
    
    for(int i=0; i<arr.size(); i++){
        for(int j=0; j<arr[i].size(); j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}


--------------------------------------------------------------------------------------------------------------------------------------------

Q) sorting of colors 
[2,0,2,1,1,0] 

this is the best method  three pointer approach

#include<bits/stdc++.h>
using namespace std;
int main ()
{
    vector<int>nums{2,0,2,1,1,0};
    int l=0;
    int m=0; 
    int h=nums.size()-1;
    while(m<=h){
        if(nums[m]==0){
            swap(nums[l],nums[m]);
            l++;
            m++;
            
        }
        else if(nums[m]==1){
            m++;
        }
        else{
            swap(nums[m],nums[h]);
            h--;
        }
    }
    
    for(auto it : nums){
        cout<<it<<" ";
    }

}

op is -> 0 0 1 1 2 2
    
   
another method 

how to get output

#include<bits/stdc++.h>
using namespace std;
int main ()
{
    vector<int>nums{2,0,2,1,1,0};
    int zeros=0;
    int ones=0;
    int twos=0;
    for(int i=0; i<nums.size(); i++){
        if(nums[i]==0){
            zeros++;
        }
        else if(nums[i]==1){
            ones++;
        }
        else{
            twos++;
        }
    }
    // i k value increase hoti rhegi 
    // nums vale array mein hi update ya overlap kar rhe hain 
    // []
    int i=0;
    while(zeros--){
        nums[i]=0;
        i++;
    }
    for(auto it : nums){
        cout<<it<<" ";
    }
    cout<<endl;
    
        // yha i k value 2 hain
        // [0,0,2,1,1,0]
    while(ones--){
        nums[i]=1;
        i++;
    }
    for(auto it : nums){
        cout<<it<<" ";
    }
    cout<<endl;
        // yha i k value 4 ho gayi h
        
    while(twos--){
        nums[i]=2;
        i++;
        // yha 6
    }
    
    
    
    for(auto it : nums){
        cout<<it<<" ";
    }
    
    
}


another 


#include<bits/stdc++.h>
using namespace std;
void sortcolors(vector<int>&nums){
    int zeros=0;
    int ones=0;
    int twos=0;
    for(int i=0; i<nums.size(); i++){
        if(nums[i]==0){
            zeros++;
        }
        else if(nums[i]==1){
            ones++;
        }
        else{
            twos++;
        }
    }


    int i=0;
    while(zeros--){
        nums[i]==0;
        i++;
    }
    while(ones--){
        nums[i]==1;
        i++;
    }
    while(twos--){
        nums[i]==2;
        i++;
    }
    
}
int main ()
{
    vector<int>nums{2,0,2,1,1,0};
    int ans=sortcolors(nums);
    
    for(auto it : ans){
        cout<<it<<" ";
    }
    
    
}


=---------------------------------------------------------------------------------------------------------
Q) MOVE NEGATIVE ELEMENT TO POSITIVE ELEMENT
 INPUT ->> [1,2,-3,4,-5,6]

#include<bits/stdc++.h>
using namespace std;
void movenegativetopositive(int arr[], int n){
    int l=0;
    int h=n-1;
    while(l<=h){
        if(arr[l]<0){
            l++;
        }
        else if(arr[h]>0){
            h--;
        }
        else{
            swap(arr[l],arr[h]);
        }
    }
}
int main ()
{
    int arr[]={1,2,-3,4,-5,6};
    int n=sizeof(arr)/sizeof(int);
    
    movenegativetopositive(arr,n);
    for(int i=0; i<n; i++){
        cout<<arr[i]<<" ";
    }
    
}


OUTPUT->>> -5 -3 2 4 1 6 



--------------------------------------------------------------------
Q find thre max
#include<bits/stdc++.h>
using namespace std;
vector<int>findMax(vector<int>arr){
    int first=INT_MIN;
    int second=INT_MIN;
    int third=INT_MIN;
    int n=arr.size();
    sort(arr.begin(),arr.end())
    for(int i=0; i<n; i++){
        if(arr[i]>first){
            third=second;
            second=first;
            first=arr[i];
        }
        else if(arr[i]>second){
            third=second;
            second=arr[i];
        }
        else if(arr[i]>third){
            third=arr[i];
        }
    }
    return {first,second,third};
}

int main(){
    vector<int>arr{1,2,3};
    vector<int>ans=findMax(arr);
    for(auto it:ans){
        cout<<it<<" ";
    }
}

another method

#include<bits/stdc++.h>
using namespace std;

vector<int>findmin(vector<int>&num)
{
    vector<int>ans;
    //1st three minimum number
    sort(num.begin(),num.end());//o(nlogn)
    //1 2 3 4 6 7 9
    for(int i=num.size()-1;i>=num.size()-3;i--)//o(3)
    {
        ans.push_back(num[i]);
    }
    return ans;//o(nlogn)+o(3)=o(nlogn)=o(n)
}

int main()
{
    vector<int>num={3,4,2,1,6,9,7};
    vector<int>minThree=findmin(num);
    for(auto it:minThree)
    {
        cout<<it<<" ";
    }


--------------------------------------------------------------------------------------------------------------------------------

Q ip=[1,2,3,4,5]
  op=
1 3 6 10 15  


#include<bits/stdc++.h>
using namespace std;

vector<int>findmin(vector<int>&num)
{
    vector<int>ans(num.size(),0);
    for(int i=0; i<num.size(); i++){
        if(i==0){
            ans[i]=ans[i]+num[i];
        }
        else{
            ans[i]=ans[i-1]+num[i];
        }
         
    }
    return ans;
}

int main()
{
    vector<int>num={1,2,3,4,5};
    vector<int>ans=findmin(num);
    for(auto it:ans)
    {
        cout<<it<<" ";
    }

---------------------------------------------------------------------------------------------------------------------------------

//ip [2 3 4 3 6 2]
//op ans=[6 8 9 24 6 12]
#include<bits/stdc++.h>
using namespace std;

vector<int>calculate(vector<int>&arr)
{
    vector<int>ans(arr.size());
    for(int i=0;i<arr.size();i++)
    {
        if(i==0)
            ans[i]= arr[i]*arr[i+1];
        if(i>0 && i<arr.size()-1)
            ans[i]=arr[i-1]*arr[i+1];
        if(i==arr.size()-1)
            ans[i] = arr[i-1]*arr[i];
    }
    return ans;
}

int main()
{
    vector<int>arr={2,3,4,3,6,2};
    vector<int>ans = calculate(arr);
    for(auto it:ans)
    {
        cout<<it<<" ";
    }
}
