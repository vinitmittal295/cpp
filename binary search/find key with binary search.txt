
binary search sorted array m hi use hota h
isme time complexity o(logn) hoti h

find a key with binary search
mid nikalne k bad start ko mid plus 1 krenge kyunki isme key mid se greater h isliye mid k bad array lenge us

#include <bits/stdc++.h>
using namespace std;
int binarysearch(int arr[],int size, int key){
    int start=0;
    int end=size-1;
    int mid=(start+end)/2;
    while(start<=end){
        if(arr[mid]==key){
            return mid;
        }
        if(arr[mid]<key){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        
        mid=(start+end)/2;
    }
    return -1;
    
}
int main(){
    int even[5]={1,3,4,5,6};
    int index=binarysearch(even,5,4);
    cout<<index;
    
}



agar is code mein tle mil jaye to'


#include <bits/stdc++.h>
using namespace std;
int binarysearch(int arr[],int size, int key){
    int start=0;
    int end=size-1;
    int mid=start+(end-start)/2;
    while(start<=end){
        if(arr[mid]==key){
            return mid;
        }
        if(arr[mid]<key){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        
        int mid=start+(end-start)/2;
    }
    return -1;
    
}
int main(){
    int even[5]={1,3,4,5,6};
    int index=binarysearch(even,5,4);
    cout<<index;
    
}